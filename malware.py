import tkinter as tk
from tkinter import messagebox
import time
import random
from watchdog.observers import Observer
import subprocess
import sys

try:
    # Try to import tkinter
    import tkinter as tk
except ImportError:
    # If import fails, attempt to install Tkinter using apt-get (Debian/Ubuntu)
    print("Attempting to install Tkinter. This may require your password.")
    subprocess.check_call([sys.executable, "-m", "sudo", "apt-get", "update"])
    subprocess.check_call([sys.executable, "-m", "sudo", "apt-get", "install", "python3-tk", "-y"])
    
    # Try importing again after installation
    try:
        import tkinter as tk
    except ImportError:
        print("Failed to install Tkinter automatically. Please install it manually.")
        sys.exit(1)

# Continue with your script...
from watchdog.events import FileSystemEventHandler

pathos = "/bin/bash"


class AlertHandler(FileSystemEventHandler):
    def on_modified(self, event):
        self.check_file(event.src_path)

    def on_created(self, event):
        self.check_file(event.src_path)

    def check_file(self, path):
        # Simulating a scan and randomly flagging files as malicious
        if random.randint(0, 10) > 7:  # Randomly consider some files as malicious
            print(f"Malicious file detected: {path}")
            self.show_warning(path)

    def show_warning(self, path):
        root = tk.Tk()
        root.withdraw()  # Hide the main window
        messagebox.showwarning("Malware Detected", f"A malicious file was detected: {path}")
        root.destroy()

def start_monitoring(path):
    event_handler = AlertHandler()
    observer = Observer()
    observer.schedule(event_handler, path, recursive=True)
    observer.start()
    print(f"Monitoring started on {path}")
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        observer.stop()
    observer.join()

if __name__ == "__main__":
    # Specify the path you want to monitor
    path_to_monitor = pathos
    start_monitoring(path_to_monitor)

